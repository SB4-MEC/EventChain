{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gauth\\\\Downloads\\\\Decentralised-ticketing-system-main\\\\Decentralised-ticketing-system-main\\\\my-app\\\\src\\\\components\\\\login\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./login.css\";\nimport { useMetaMask } from \"metamask-react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [userWalletAddress, setUserWalletAddress] = useState(null);\n  const {\n    status,\n    connect,\n    account,\n    chainId,\n    ethereum\n  } = useMetaMask();\n  const navigate = useNavigate();\n  useEffect(() => {\n    toggleButton();\n  }, []);\n  function toggleButton() {\n    const loginButton = document.getElementById('loginButton');\n    if (!window.ethereum) {\n      loginButton.innerText = 'MetaMask is not installed';\n      loginButton.classList.remove('bg-purple-500', 'text-white');\n      loginButton.classList.add('bg-gray-500', 'text-gray-100', 'cursor-not-allowed');\n      return false;\n    }\n    loginButton.addEventListener('click', loginWithMetaMask);\n  }\n  async function loginWithMetaMask() {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setUserWalletAddress(accounts[0]);\n      const userWallet = document.getElementById('userWallet');\n      userWallet.innerText = accounts[0];\n      const loginButton = document.getElementById('loginButton');\n      loginButton.innerText = 'Sign out of MetaMask';\n      loginButton.removeEventListener('click', loginWithMetaMask);\n      setTimeout(() => {\n        loginButton.addEventListener('click', signOutOfMetaMask);\n      }, 200);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  function signOutOfMetaMask() {\n    setUserWalletAddress(null);\n    const userWallet = document.getElementById('userWallet');\n    userWallet.innerText = '';\n    const loginButton = document.getElementById('loginButton');\n    loginButton.innerText = 'Sign in with MetaMask';\n    loginButton.removeEventListener('click', signOutOfMetaMask);\n    setTimeout(() => {\n      loginButton.addEventListener('click', loginWithMetaMask);\n    }, 200);\n  }\n\n  // if (status === \"initializing\") return <div>Synchronisation with MetaMask ongoing...</div>\n  // if (status === \"unavailable\") return <div>MetaMask not available :</div>\n  // if (status === \"notConnected\") return <button onClick={connect}>Connect to MetaMask</button>\n  // if (status === \"connecting\") return <div>Connecting...</div>\n  if (status === \"connected\") {\n    navigate('/M');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"loginButton\",\n        className: \"login-button\",\n        children: \"Login with MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"userWallet\",\n        className: \"user-wallet\",\n        children: userWalletAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"IA1s3LTquYcRUd8hCvJA20iLMQU=\", false, function () {\n  return [useMetaMask, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useMetaMask","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","Login","_s","userWalletAddress","setUserWalletAddress","status","connect","account","chainId","ethereum","navigate","toggleButton","loginButton","document","getElementById","window","innerText","classList","remove","add","addEventListener","loginWithMetaMask","accounts","request","method","userWallet","removeEventListener","setTimeout","signOutOfMetaMask","error","console","message","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gauth/Downloads/Decentralised-ticketing-system-main/Decentralised-ticketing-system-main/my-app/src/components/login/login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./login.css\"\r\nimport { useMetaMask } from \"metamask-react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nfunction Login() {\r\n  const [userWalletAddress, setUserWalletAddress] = useState(null);\r\n  const { status, connect, account, chainId, ethereum } = useMetaMask();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    toggleButton();\r\n  }, []);\r\n\r\n  function toggleButton() {\r\n    const loginButton = document.getElementById('loginButton');\r\n    if (!window.ethereum) {\r\n      loginButton.innerText = 'MetaMask is not installed';\r\n      loginButton.classList.remove('bg-purple-500', 'text-white');\r\n      loginButton.classList.add('bg-gray-500', 'text-gray-100', 'cursor-not-allowed');\r\n      return false;\r\n    }\r\n\r\n    loginButton.addEventListener('click', loginWithMetaMask);\r\n  }\r\n\r\n  async function loginWithMetaMask() {\r\n    try {\r\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      setUserWalletAddress(accounts[0]);\r\n      const userWallet = document.getElementById('userWallet');\r\n      userWallet.innerText = accounts[0];\r\n      const loginButton = document.getElementById('loginButton');\r\n      loginButton.innerText = 'Sign out of MetaMask';\r\n      loginButton.removeEventListener('click', loginWithMetaMask);\r\n      setTimeout(() => {\r\n        loginButton.addEventListener('click', signOutOfMetaMask);\r\n      }, 200);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  function signOutOfMetaMask() {\r\n    setUserWalletAddress(null);\r\n    const userWallet = document.getElementById('userWallet');\r\n    userWallet.innerText = '';\r\n    const loginButton = document.getElementById('loginButton');\r\n    loginButton.innerText = 'Sign in with MetaMask';\r\n    loginButton.removeEventListener('click', signOutOfMetaMask);\r\n    setTimeout(() => {\r\n      loginButton.addEventListener('click', loginWithMetaMask);\r\n    }, 200);\r\n  }\r\n\r\n  // if (status === \"initializing\") return <div>Synchronisation with MetaMask ongoing...</div>\r\n  // if (status === \"unavailable\") return <div>MetaMask not available :</div>\r\n  // if (status === \"notConnected\") return <button onClick={connect}>Connect to MetaMask</button>\r\n  // if (status === \"connecting\") return <div>Connecting...</div>\r\n  if (status === \"connected\") {navigate('/M')}\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <button id=\"loginButton\" className=\"login-button\">\r\n          Login with MetaMask\r\n        </button>\r\n        <p id=\"userWallet\" className=\"user-wallet\">\r\n          {userWalletAddress}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}