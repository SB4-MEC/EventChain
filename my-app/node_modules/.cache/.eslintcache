[{"C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\index.js":"1","C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\App.jsx":"2","C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\components\\Navbar\\Navbar.jsx":"3","C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\components\\cards\\Cards.jsx":"4","C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\components\\Mainpage\\Mainpage.jsx":"5","C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\components\\login\\login.jsx":"6"},{"size":738,"mtime":1709718264097,"results":"7","hashOfConfig":"8"},{"size":517,"mtime":1709718904545,"results":"9","hashOfConfig":"8"},{"size":530,"mtime":1691049977000,"results":"10","hashOfConfig":"8"},{"size":285,"mtime":1691049977000,"results":"11","hashOfConfig":"8"},{"size":7008,"mtime":1709714411914,"results":"12","hashOfConfig":"8"},{"size":2756,"mtime":1709718912863,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1odzmdj",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\index.js",[],[],"C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\App.jsx",["37","38"],[],"C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\components\\Navbar\\Navbar.jsx",["39"],[],"import React from 'react';\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n  return (\n    <div class = \"big\">\n       <nav class=\"menu-container\">\n      \n  \n  <input type=\"checkbox\" aria-label=\"Toggle menu\" />\n  <span></span>\n  <span></span>\n  <span></span>\n\n \n  <a href=\"#\" class=\"menu-logo\">\n    <img src=\"https://wweb.dev/resources/navigation-generator/logo-placeholder.png\" alt=\"My Awesome Website\"/>\n  </a>\n  <p class =\"title\">\n        Decentralized ticking system\n    </p>\n\n\n  \n</nav>\n\n    </div>\n\n  )\n}\n\nexport default Navbar",[],"C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\components\\cards\\Cards.jsx",["40","41","42"],[],"import React from 'react';\n//import Web3 from 'web3';\nimport  { useState, useEffect } from 'react';\nimport idGenerator from '../../contracts/idGenerator.json';\n\nconst Cards = () => {\n \n\n\n  return (\n    <div>\n        <div class='cards'>saish</div>\n    </div>\n  )\n}\n\nexport default Cards","C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\components\\Mainpage\\Mainpage.jsx",["43","44","45","46","47","48"],[],"import React from 'react';\nimport './Mainpage.css';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\"; \nimport Popup from 'reactjs-popup';\nimport idGenerator from '../../contracts/idGenerator.json';\nimport Web3 from 'web3' ; \nimport emailjs from 'emailjs-com'; \n\n\n\n\n\nconst Mainpage = () => {\n  const [myData, setMyData] = useState([]);\n  const [isError, setIsError] = useState(\"\");\n  const [imageSrc, setImageSrc] = useState([]);\n  const [value2, setValue2] = useState(\"\");\n  const [index , setIndex] = useState(null);\n  const [selectedItemIndex, setSelectedItemIndex] = useState(null);\n  const [idd,setId] = useState (null); \n  const [update, setUpdate] = useState(null); \n  \n  const [state,setState] = useState ( {web3 : null, contract : null}); \n\n  \n\n  useEffect ( ()=>  {\n    const provider = new Web3.providers.HttpProvider ( \"HTTP://127.0.0.1:7545\")\n    provider && template (); \n\n    async function template(){\n    const web3 = new Web3(provider);\n    const network_id = await web3.eth.net.getId ();  \n    const deployedNetworks = idGenerator.networks[network_id]\n    const contract = new web3.eth.Contract (idGenerator.abi, deployedNetworks.address); \n    console.log (contract); \n    setState ( { web3: web3, contract : contract } )\n  }\n\n  }, [])\n\n\n\n\n\n  const handleInputChange = (e) => { \n if (e.target.id === 'textInput1') {\n      console.log(\"Input value:\", e.target.value);\n      setValue2(e.target.value);\n    }\n  }\n  useEffect ( ()=> { \n  const pass = { id: idd, email: value2 };\n  console.log('pass:', pass);\n\n  // Send email using emailjs\n  emailjs.send('service_hwcdgcf', 'template_8f3ctog', pass, 'dM03lGBPkH238-yzf')\n    .then((response) => {\n      console.log('Email sent successfully:', response);\n    })\n    .catch((error) => {\n      console.error('Error sending email:', error);\n    });\n  },[idd]);\n   \n  useEffect ( ()=> { \n  console.log ('Variable 2:', value2);\n    },[value2]);\n\n    useEffect ( ()=> { \n      console.log ('Index:', selectedItemIndex);\n        },[selectedItemIndex]);\n\n\n  // using Async Await\n  const getMyPostData = async () => {\n    try {\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setMyData(res.data);\n    } catch (error) {\n      setIsError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getMyPostData();\n    const images = [];\n    for (var i = 0; i < 15; i++) {\n      images.push(\"https://picsum.photos/200/300?random=\" + i);\n    }\n    setImageSrc(images);\n  }, []);\n\n  const images = imageSrc.map((image, index) => ({ url: image, index }));\n\n  const getInputValue = (index) => {\n    setIndex(index); // Store the index in the state\n    console.log('Index:', index);\n    _setID(index) // Log the index to the console\n  };\n\n  async function _setID(number) {\n    const { contract } = state;\n    \n   \n    await contract.methods\n      .setId(number)\n      .send({ from: \"0xAE78EAaEE800eE760D0B13f9d6a0dfF9cEe08646\" });\n      \n      setUpdate (number) ;\n    //window.location.reload();\n   }\n\n   useEffect ( ()=> {\n    const {contract} = state; \n   \n\n    async function result() {\n      try {\n        const data = await contract.methods.id().call();\n       \n        console.log(parseInt(data));\n         setId(parseInt(data)); \n      } catch (error) {\n        console.log(\"Error fetching result:\", error);\n        // Handle the error as needed\n      }\n\n    }\n   \n\n    contract && result (); \n  },[update]) \n\n\n\n   \n\n\n  return (\n    <div>\n      <div className=\"background\">\n          <div className='cards'>\n            <div className=\"grid\">\n              {images.map(({ url, index }) => {\n                const post = myData[index];\n                if (!post) return null;\n                const { title, body } = post;\n                return (\n                  <div key={index} className=\"card\">\n                    <img className='imageedit' src={url} alt=\"Girl in a jacket\" width=\"250\" height=\"250\" />\n                    <h2 className='tile'>{title.slice(0, 15).toUpperCase()}</h2>\n                    <p className='bodyu'>{body.slice(0, 100)}</p>\n                   \n                    <Popup trigger=\n                { <button id=\"myButton\" className='button-54'>BOOK NOW</button>}\n                modal nested>\n                {\n                    close => (\n                        <div className='modal'>\n                            <div className='content'>\n                            <img className='imageedit' src={url} alt=\"Girl in a jacket\" width=\"250\" height=\"250\" />\n                              <p className='textEditor'>GREAT PICK.</p> <b></b> \n                              <p className='textEditor'> <b>{title.slice(0, 15).toUpperCase()} </b>IS ONE OF THE BEST EVENT WE GOT HERE</p>\n                              <input id=\"textInput1\" type = \"text\" className='gmailInput' placeholder='ENTER THE GMAIL' onChange={handleInputChange} required></input>\n                            </div>\n                            <div>\n                            <Popup trigger=\n                { <button onClick={({}) =>   getInputValue(index)} id=\"ConfirmButton\" className='button-54'  >CONFIRM</button>\n               }\n                modal nested\n                onOpen={() => getInputValue(index)}>\n                {\n                    close => (\n                        <div id=\"modal2\"className='modal'>\n                            <div className='content'>\n                               <p className='text2'> OOOLA LA! YOU EVENT TICKET IS CONFIRMED. </p> <b></b>\n                                <p className='text2'>THE TICKET WILL BE MAILLED TO YOUR GMAIL.</p>\n                            </div>\n                            <div>\n                                \n                                <button id= \"button2\"className='button-54' onClick=\n                                    {() => close()}>\n                                        THANK YOU\n                                </button>\n                            </div>\n                        </div>\n                    )\n                }\n            </Popup>             \n          \n                                <button id='closeButton' className='button-54' onClick=\n                                    {() => close()} >\n                                        Close \n                                </button>\n                            </div>\n                        </div>\n                    )\n                }\n            </Popup>\n                  </div>\n                );\n              })}\n                  </div>\n                </div>\n     \n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      </div>\n    </div>\n  );\n};\n\nexport default Mainpage;\n\n\n","C:\\Users\\gauth\\Downloads\\Decentralised-ticketing-system-main\\Decentralised-ticketing-system-main\\my-app\\src\\components\\login\\login.jsx",["49","50","51","52","53","54","55"],[],"import React, { useState, useEffect } from 'react';\r\nimport \"./login.css\"\r\nimport { useMetaMask } from \"metamask-react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nfunction Login() {\r\n  const [userWalletAddress, setUserWalletAddress] = useState(null);\r\n  const { status, connect, account, chainId, ethereum } = useMetaMask();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    toggleButton();\r\n  }, []);\r\n\r\n  function toggleButton() {\r\n    const loginButton = document.getElementById('loginButton');\r\n    if (!window.ethereum) {\r\n      loginButton.innerText = 'MetaMask is not installed';\r\n      loginButton.classList.remove('bg-purple-500', 'text-white');\r\n      loginButton.classList.add('bg-gray-500', 'text-gray-100', 'cursor-not-allowed');\r\n      return false;\r\n    }\r\n\r\n    loginButton.addEventListener('click', loginWithMetaMask);\r\n  }\r\n\r\n  async function loginWithMetaMask() {\r\n    try {\r\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      setUserWalletAddress(accounts[0]);\r\n      const userWallet = document.getElementById('userWallet');\r\n      userWallet.innerText = accounts[0];\r\n      const loginButton = document.getElementById('loginButton');\r\n      loginButton.innerText = 'Sign out of MetaMask';\r\n      loginButton.removeEventListener('click', loginWithMetaMask);\r\n      setTimeout(() => {\r\n        loginButton.addEventListener('click', signOutOfMetaMask);\r\n      }, 200);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  function signOutOfMetaMask() {\r\n    setUserWalletAddress(null);\r\n    const userWallet = document.getElementById('userWallet');\r\n    userWallet.innerText = '';\r\n    const loginButton = document.getElementById('loginButton');\r\n    loginButton.innerText = 'Sign in with MetaMask';\r\n    loginButton.removeEventListener('click', signOutOfMetaMask);\r\n    setTimeout(() => {\r\n      loginButton.addEventListener('click', loginWithMetaMask);\r\n    }, 200);\r\n  }\r\n\r\n  // if (status === \"initializing\") return <div>Synchronisation with MetaMask ongoing...</div>\r\n  // if (status === \"unavailable\") return <div>MetaMask not available :</div>\r\n  // if (status === \"notConnected\") return <button onClick={connect}>Connect to MetaMask</button>\r\n  // if (status === \"connecting\") return <div>Connecting...</div>\r\n  if (status === \"connected\") {navigate('/Booking')}\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <button id=\"loginButton\" className=\"login-button\">\r\n          Login with MetaMask\r\n        </button>\r\n        <p id=\"userWallet\" className=\"user-wallet\">\r\n          {userWalletAddress}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n",{"ruleId":"56","severity":1,"message":"57","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":14},{"ruleId":"56","severity":1,"message":"60","line":7,"column":8,"nodeType":"58","messageId":"59","endLine":7,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":16,"column":3,"nodeType":"63","endLine":16,"endColumn":33},{"ruleId":"56","severity":1,"message":"64","line":3,"column":11,"nodeType":"58","messageId":"59","endLine":3,"endColumn":19},{"ruleId":"56","severity":1,"message":"65","line":3,"column":21,"nodeType":"58","messageId":"59","endLine":3,"endColumn":30},{"ruleId":"56","severity":1,"message":"66","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":19},{"ruleId":"56","severity":1,"message":"67","line":16,"column":10,"nodeType":"58","messageId":"59","endLine":16,"endColumn":17},{"ruleId":"56","severity":1,"message":"68","line":19,"column":10,"nodeType":"58","messageId":"59","endLine":19,"endColumn":15},{"ruleId":"56","severity":1,"message":"69","line":20,"column":29,"nodeType":"58","messageId":"59","endLine":20,"endColumn":49},{"ruleId":"70","severity":1,"message":"71","line":65,"column":5,"nodeType":"72","endLine":65,"endColumn":10,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":134,"column":5,"nodeType":"72","endLine":134,"endColumn":13,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":170,"column":37,"nodeType":"78","messageId":"79","endLine":170,"endColumn":39},{"ruleId":"56","severity":1,"message":"80","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":14},{"ruleId":"56","severity":1,"message":"81","line":4,"column":29,"nodeType":"58","messageId":"59","endLine":4,"endColumn":40},{"ruleId":"56","severity":1,"message":"82","line":7,"column":19,"nodeType":"58","messageId":"59","endLine":7,"endColumn":26},{"ruleId":"56","severity":1,"message":"83","line":7,"column":28,"nodeType":"58","messageId":"59","endLine":7,"endColumn":35},{"ruleId":"56","severity":1,"message":"84","line":7,"column":37,"nodeType":"58","messageId":"59","endLine":7,"endColumn":44},{"ruleId":"56","severity":1,"message":"85","line":7,"column":46,"nodeType":"58","messageId":"59","endLine":7,"endColumn":54},{"ruleId":"70","severity":1,"message":"86","line":12,"column":6,"nodeType":"72","endLine":12,"endColumn":8,"suggestions":"87"},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Cards' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'idGenerator' is defined but never used.","'isError' is assigned a value but never used.","'index' is assigned a value but never used.","'setSelectedItemIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'value2'. Either include it or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["89"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Link' is defined but never used.","'useLocation' is defined but never used.","'connect' is assigned a value but never used.","'account' is assigned a value but never used.","'chainId' is assigned a value but never used.","'ethereum' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'toggleButton'. Either include it or remove the dependency array.",["90"],{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [idd, value2]",{"range":"97","text":"98"},"Update the dependencies array to be: [state, update]",{"range":"99","text":"100"},"Update the dependencies array to be: [toggleButton]",{"range":"101","text":"102"},[1836,1841],"[idd, value2]",[3407,3415],"[state, update]",[437,439],"[toggleButton]"]